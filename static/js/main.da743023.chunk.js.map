{"version":3,"sources":["constants/TypeActions.js","components/header/createNewTask/CreateTask.jsx","components/header/nav/Nav.jsx","components/main/content/ContentItem.jsx","components/main/content/allTaskList/AllTaskList.jsx","components/main/content/doingTaskList/DoingTaskList.jsx","components/main/content/doneTaskList/DoneTaskList.jsx","components/main/content/EditContent.jsx","components/main/content/newTaskList/NewTaskList.jsx","components/main/sidebar/Sidebar.jsx","components/main/content/searchList/SearchList.jsx","App.js","reducers/createReducer.js","reducers/getDataReducer.js","reducers/taskReducer.js","reducers/searchReducer.js","reducers/index.js","index.js"],"names":["SUBMIT_FORM_CREATE","SUBMIT_FORM_EDIT","SUBMIT_FORM_SEARCH","GET_DATA","connect","state","data","getDataReducer","dispatch","onSubmitFormCreate","value","type","TypeActions","props","time","Date","getHours","getMinutes","getSeconds","date","getDay","getMonth","getFullYear","createAt","useState","title","status","creator","description","setValue","history","useHistory","onSubmit","e","preventDefault","push","className","placeholder","onChange","target","disabled","onSubmitFormSearch","to","id","ContentItem","AllTaskList","onClickedTask","dataAllTask","JSON","parse","localStorage","getItem","map","item","DoingTaskList","filter","todo","clicked","DoneTaskList","onSubmitFormEdit","getTodoLocal","desc","defaultValue","setDefaultValue","valueEdit","setValueEdit","useEffect","parseInt","match","params","for","name","checked","onClick","newListTodo","indexTodo","findIndex","splice","setItem","stringify","NewTaskList","clickNewTaskSidebar","clickDoingTaskSidebar","clickDoneTaskSidebar","clickAllTaskSidebar","dataSearch","searchReducer","console","log","onGetData","axios","get","then","res","catch","err","path","exact","component","CreateTask","EditContent","SearchList","initState","dataCreate","createReducer","action","newData","length","taskReducer","newTodoLocal","listFilterTodo","toLowerCase","includes","rootReducers","combineReducers","createTaskReducer","store","createStore","reducers","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da743023.chunk.js","sourcesContent":["\r\nexport const SUBMIT_FORM_CREATE = 'SUBMIT_FORM_CREATE'\r\nexport const SUBMIT_FORM_EDIT = 'SUBMIT_FORM_EDIT';\r\nexport const DELETE_FORM_EDIT = 'DELETE_FORM_EDIT';\r\nexport const SUBMIT_FORM_SEARCH = 'SUBMIT_FORM_SEARCH';\r\nexport const GET_DATA = 'GET_DATA'\r\n\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as TypeActions from \"../../../constants/TypeActions\";\r\n\r\nconst CreateTask = ({ onSubmitFormCreate, data }, props) => {\r\n  const time = ` ${new Date().getHours()}-${new Date().getMinutes()}-${new Date().getSeconds()}`;\r\n  const date = `${new Date().getDay()}-${new Date().getMonth() + 1}-${new Date().getFullYear()}`\r\n  const createAt = `${time} ${date}`\r\n\r\n  const [value, setValue] = useState({\r\n    title: '',\r\n    status: 'new',\r\n    creator: '',\r\n    description: '',\r\n  })\r\n\r\n  let history = useHistory()\r\n\r\n  const hanldeSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmitFormCreate(value, data)\r\n    history.push('/all')\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={hanldeSubmit}>\r\n      <div className=\"form__item\">\r\n        <label className=\"label1\" > Title: </label >\r\n        <input className=\"input1\" type=\"text\" placeholder=\"name of title\" onChange={e => setValue({ ...value, title: e.target.value })} />\r\n      </div>\r\n\r\n      <div className=\"form__item\">\r\n        <label className=\"label2\">Creator: </label>\r\n        <input className=\"input2\" type=\"text\" placeholder=\"name of creator\" onChange={e => setValue({ ...value, creator: e.target.value })} />\r\n      </div>\r\n\r\n      <div className=\"form__item\">\r\n        <label className=\"label3\">Created at: </label>\r\n        <input className=\"input3\" type=\"text\" value={createAt} disabled />\r\n      </div>\r\n\r\n      <div className=\"form__item\">\r\n        <label className=\"label4\">Description: </label>\r\n        <input className=\"input4\" type=\"text\" placeholder=\"Description detail\" onChange={e => setValue({ ...value, description: e.target.value })} />\r\n      </div>\r\n      <button type=\"submit\">Save</button>\r\n    </form >\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.getDataReducer.data,\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmitFormCreate: (value, data) => dispatch({ type: TypeActions.SUBMIT_FORM_CREATE, value, data })\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTask);","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport * as TypeActions from '../../../constants/TypeActions';\r\n\r\nconst Nav = ({ onSubmitFormSearch }) => {\r\n    const [value, setValue] = useState('')\r\n    const history = useHistory()\r\n\r\n    const hanldeSubmitFormSearch = e => {\r\n        e.preventDefault();\r\n        onSubmitFormSearch(value)\r\n        history.push('/search')\r\n    }\r\n\r\n    return (\r\n        <div className=\"header__navbar\">\r\n            <Link to=\"/create\" className=\"navbar-create\">\r\n                <h2>Create new task</h2>\r\n            </Link>\r\n            <div className=\"navbar-search\">\r\n                <form id=\"form__search\" onSubmit={hanldeSubmitFormSearch}>\r\n                    <input type=\"text\" id=\"search-box\" value={value} onChange={e => { setValue(e.target.value) }} />\r\n                    <button>Search</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitFormSearch: (value) => dispatch({ type: TypeActions.SUBMIT_FORM_SEARCH, value })\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Nav);","import React from 'react';\r\n\r\nconst ContentItem = ({ title, creator, status, description }) => {\r\n    return (\r\n        <div className=\"main__content-item\">\r\n            <h6>Title: {title}</h6>\r\n            <p>Creator: {creator}</p>\r\n            <p>status: {status}</p>\r\n            <p>description:</p>\r\n            <p className=\"item__content\">{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ContentItem;","import { Link } from \"react-router-dom\";\r\nimport ContentItem from \"../ContentItem\";\r\n\r\nconst AllTaskList = ({ onClickedTask }) => {\r\n    const dataAllTask = JSON.parse(localStorage.getItem('listTodo'))\r\n\r\n    return dataAllTask ? dataAllTask.map(item => (\r\n        <Link to={`/edit/${item.id}`} key={item.id}>\r\n            <ContentItem\r\n                title={item.title}\r\n                creator={item.creator}\r\n                status={item.status}\r\n                description={item.description} />\r\n        </Link>\r\n    )) : <p>loading</p>\r\n}\r\n\r\nexport default AllTaskList","import { Link } from \"react-router-dom\";\r\nimport ContentItem from '../ContentItem';\r\n\r\nconst DoingTaskList = ({ onClickedTask }) => {\r\n    const getTodoLocal = JSON.parse(localStorage.getItem('listTodo'))\r\n    const dataDoing = getTodoLocal.filter(todo => {\r\n        if (todo.status === 'doing') {\r\n            return todo\r\n        }\r\n    })\r\n\r\n    return (\r\n        dataDoing.map(item => (\r\n            <Link to={`/edit/${item.id}`} key={item.id}>\r\n                <ContentItem\r\n                    key={item.id}\r\n                    title={item.title}\r\n                    creator={item.creator}\r\n                    status={item.status}\r\n                    description={item.description}\r\n                    clicked={() => onClickedTask(item)} />\r\n            </Link>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default DoingTaskList","import { Link } from \"react-router-dom\";\r\nimport ContentItem from '../ContentItem';\r\n\r\nconst DoneTaskList = ({ onClickedTask }) => {\r\n    const getTodoLocal = JSON.parse(localStorage.getItem('listTodo'))\r\n    const dataDone = getTodoLocal.filter(todo => {\r\n        if (todo.status === 'done') {\r\n            return todo\r\n        }\r\n    })\r\n\r\n    return (\r\n        dataDone.map(item => (\r\n            <Link to={`/edit/${item.id}`} key={item.id}>\r\n                <ContentItem\r\n                    key={item.id}\r\n                    title={item.title}\r\n                    creator={item.creator}\r\n                    status={item.status}\r\n                    description={item.description}\r\n                    clicked={() => onClickedTask(item)} />\r\n            </Link>\r\n\r\n        ))\r\n    )\r\n}\r\n\r\nexport default DoneTaskList","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as TypeActions from '../../../constants/TypeActions';\r\n\r\nconst EditContent = (props) => {\r\n  const time = ` ${new Date().getHours()}-${new Date().getMinutes()}-${new Date().getSeconds()}`;\r\n  const date = `${new Date().getDay()}-${new Date().getMonth() + 1}-${new Date().getFullYear()}`\r\n  const createAt = `${time} ${date}`;\r\n\r\n  const getTodoLocal = JSON.parse(localStorage.getItem('listTodo'))\r\n\r\n  const [defaultValue, setDefaultValue] = useState({\r\n    title: '',\r\n    creator: '',\r\n    status: '',\r\n    desc: ''\r\n  })\r\n\r\n  const [valueEdit, setValueEdit] = useState({\r\n    title: defaultValue.title,\r\n    creator: defaultValue.creator,\r\n    createAt: createAt,\r\n    status: defaultValue.status,\r\n    desc: defaultValue.description\r\n  })\r\n\r\n  const handleSubmitFormEdit = (e) => {\r\n    e.preventDefault()\r\n    props.onSubmitFormEdit(valueEdit, props.match.params.id)\r\n    props.history.push('/all')\r\n  }\r\n  const hanldeResetForm = (e) => {\r\n    e.preventDefault()\r\n    setDefaultValue({ title: '', creator: '', status: '', desc: '' })\r\n  }\r\n\r\n\r\n  const handleDeleteForm = () => {\r\n    const newListTodo = [...getTodoLocal];\r\n    const indexTodo = newListTodo.findIndex(todo => todo.id === parseInt(props.match.params.id))\r\n    newListTodo.splice(indexTodo, 1)\r\n    localStorage.setItem('listTodo', JSON.stringify(newListTodo))\r\n    props.history.push('/all')\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getTodoLocal.filter(item => {\r\n      if (item.id === parseInt(props.match.params.id)) {\r\n        setDefaultValue({\r\n          title: item.title,\r\n          creator: item.creator,\r\n          status: item.status,\r\n          desc: item.description\r\n        })\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <form onSubmit={handleSubmitFormEdit}>\r\n      <div className=\"form__item\">\r\n        <label className=\"label1\" > Title: </label >\r\n        <input className=\"input1\"\r\n          type=\"text\" value={valueEdit.title ? valueEdit.title : defaultValue.title}\r\n          placeholder=\"name of title\"\r\n          onChange={\r\n            e => setValueEdit({ ...valueEdit, title: e.target.value, })\r\n          } />\r\n      </div>\r\n\r\n      <div className=\"form__item\">\r\n        <label className=\"label2\">Creator: </label>\r\n        <input className=\"input2\" type=\"text\" value={valueEdit.creator ? valueEdit.creator : defaultValue.creator} placeholder=\"name of creator\" onChange={e => setValueEdit({ ...valueEdit, creator: e.target.value })} />\r\n      </div>\r\n\r\n      <div className=\"form__item\">\r\n        <label className=\"label3\">Created at: </label>\r\n        <input className=\"input3\" type=\"text\" value={valueEdit.createAt} disabled />\r\n      </div>\r\n\r\n      <div className=\"form__item\">\r\n        <label className=\"label4\">Description: </label>\r\n        <input className=\"input4\" type=\"text\" value={valueEdit.desc ? valueEdit.desc : defaultValue.desc} placeholder=\"Description detail\" onChange={e => setValueEdit({ ...valueEdit, desc: e.target.value })} />\r\n      </div>\r\n\r\n      <div className=\"form__item\">\r\n        <div className=\"form__item-radio\">\r\n          <label for=\"new\" name=\"status-task\">New</label>\r\n          <input type=\"radio\" name=\"status-task\" id=\"new\" value=\"new\" onChange={e => setValueEdit({ ...valueEdit, status: e.target.value })} />\r\n        </div>\r\n\r\n        <div className=\"form__item-radio\">\r\n          <label for=\"doing\" name=\"status-task\">Doing</label>\r\n          <input type=\"radio\" name=\"status-task\" id=\"doing\" value=\"doing\" checked onChange={e => setValueEdit({ ...valueEdit, status: e.target.value })} />\r\n        </div>\r\n\r\n        <div className=\"form__item-radio\">\r\n          <label for=\"done\" name=\"status-task\">Done</label>\r\n          <input type=\"radio\" name=\"status-task\" id=\"done\" value=\"done\" onChange={e => setValueEdit({ ...valueEdit, status: e.target.value })} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form__item-button\">\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={hanldeResetForm}>Reset</button>\r\n        <button type=\"button\" onClick={handleDeleteForm} >Delete</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmitFormEdit: (value, id) => dispatch({ type: TypeActions.SUBMIT_FORM_EDIT, value, id }),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(EditContent);","import { Link } from \"react-router-dom\";\r\nimport ContentItem from '../ContentItem';\r\n\r\nconst NewTaskList = ({ onClickedTask }) => {\r\n    const getTodoLocal = JSON.parse(localStorage.getItem('listTodo'))\r\n    const dataNew = getTodoLocal.filter(todo => {\r\n        if (todo.status === 'new') {\r\n            return todo\r\n        }\r\n    })\r\n\r\n    return (\r\n        dataNew.map(item => (\r\n            <Link to={`/edit/${item.id}`} key={item.id}>\r\n                <ContentItem\r\n                    key={item.id}\r\n                    title={item.title}\r\n                    creator={item.creator}\r\n                    status={item.status}\r\n                    description={item.description}\r\n                    clicked={() => onClickedTask(item)} />\r\n            </Link>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default NewTaskList","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Sidebar = ({ clickNewTaskSidebar, clickDoingTaskSidebar, clickDoneTaskSidebar, clickAllTaskSidebar }) => {\r\n\r\n    return (\r\n        <ul>\r\n            <Link to=\"/all\">\r\n                <li onClick={clickAllTaskSidebar}>All task</li>\r\n            </Link>\r\n            <Link to=\"/new\">\r\n                <li onClick={clickNewTaskSidebar}>New task</li>\r\n            </Link>\r\n            <Link to=\"/doing\">\r\n                <li onClick={clickDoingTaskSidebar}>Doing task</li>\r\n            </Link>\r\n            <Link to=\"/done\">\r\n                <li onClick={clickDoneTaskSidebar}>Done task</li>\r\n            </Link>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clickNewTaskSidebar: () => { dispatch({ type: 'CLICK_NEW_SIDEBAR' }) },\r\n        clickDoingTaskSidebar: () => { dispatch({ type: 'CLICK_DOING_SIDEBAR' }) },\r\n        clickDoneTaskSidebar: () => { dispatch({ type: 'CLICK_DONE_SIDEBAR' }) },\r\n        clickAllTaskSidebar: () => { dispatch({ type: 'CLICK_ALLTASK_SIDEBAR' }) }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Sidebar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ContentItem from '../ContentItem';\r\n\r\n\r\nconst SearchList = ({ dataSearch }) => {\r\n    console.log(dataSearch);\r\n\r\n    return (\r\n        dataSearch.map((item =>\r\n            <Link to=\"/edit\">\r\n                <ContentItem\r\n                    key={item.id}\r\n                    title={item.title}\r\n                    creator={item.creator}\r\n                    status={item.status}\r\n                    description={item.description} />\r\n            </Link>\r\n        ))\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataSearch: state.searchReducer.dataSearch,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SearchList);","import axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport * as TypeActions from './constants/TypeActions';\r\nimport './App.scss';\r\nimport CreateTask from './components/header/createNewTask/CreateTask';\r\nimport Nav from './components/header/nav/Nav';\r\nimport AllTaskList from './components/main/content/allTaskList/AllTaskList';\r\nimport DoingTaskList from './components/main/content/doingTaskList/DoingTaskList';\r\nimport DoneTaskList from './components/main/content/doneTaskList/DoneTaskList';\r\nimport EditContent from './components/main/content/EditContent';\r\nimport NewTaskList from './components/main/content/newTaskList/NewTaskList';\r\nimport Sidebar from './components/main/sidebar/Sidebar';\r\nimport SearchList from './components/main/content/searchList/SearchList';\r\n\r\n\r\nconst App = ({ onGetData }) => {\r\n  // const [currentPage, setCurrentPage] = useState(1);\r\n  // const [todosPerPage] = useState(12)\r\n  // const [totalTodos, setTotalTodos] = useState(0)\r\n  // const [currentTodos, setCurrentTodos] = useState(null)\r\n  // if (currentTodos) {\r\n  //   const indexOfLastTodos = currentPage * todosPerPage;\r\n  //   const indexOfFirstTodos = indexOfLastTodos - todosPerPage;\r\n  //   const totalTodoOnPage = currentTodos.slice(indexOfFirstTodos, indexOfLastTodos)\r\n  // }\r\n\r\n\r\n  // const handlePageChange = (newPage) => {\r\n  //   setCurrentPage(newPage)\r\n  // }\r\n\r\n  useEffect(() => {\r\n    axios.get('https://todolist-data-2f4e2-default-rtdb.firebaseio.com/todoList.json')\r\n      .then(res => {\r\n        onGetData(res.data)\r\n      }).catch(err => {\r\n        console.log('error: ', err);\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <Router >\r\n      <div className=\"app\">\r\n        <Nav />\r\n        <div className=\"main\">\r\n          <div className=\"main__sidebar\">\r\n            <Sidebar />\r\n          </div>\r\n          <div className=\"main__content\">\r\n            <Switch>\r\n              <Route path=\"/\" exact component={AllTaskList} />\r\n              <Route path=\"/all\" exact component={AllTaskList} />\r\n              <Route path=\"/new\" exact component={NewTaskList} />\r\n              <Route path=\"/doing\" exact component={DoingTaskList} />\r\n              <Route path=\"/done\" exact component={DoneTaskList} />\r\n              <Route path=\"/create/\" exact component={CreateTask} />\r\n              <Route path=\"/edit/:id\" component={EditContent} />\r\n              <Route path=\"/search\" component={SearchList} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n        {/* < Pagination\r\n          currentPage={currentPage}\r\n          onPageChange={handlePageChange}\r\n          todosPerPage={todosPerPage}\r\n          totalTodos={totalTodos}\r\n        /> */}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     isSearch: state.create.isSearch\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onGetData: (data) => dispatch({ type: TypeActions.GET_DATA, data })\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import * as TypeActions from '../constants/TypeActions';\r\n\r\nconst initState = {\r\n  dataCreate: []\r\n}\r\n\r\nconst createReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case TypeActions.SUBMIT_FORM_CREATE:\r\n      const getTodoLocal = JSON.parse(localStorage.getItem('listTodo'))\r\n\r\n      const newData = [...getTodoLocal]\r\n      newData.push({ ...action.value, id: getTodoLocal.length })\r\n      localStorage.setItem('listTodo', JSON.stringify(newData))\r\n\r\n      return {\r\n        ...state,\r\n        dataCreate: newData\r\n      }\r\n\r\n\r\n\r\n    // case SUBMIT_CREATE_TASK:\r\n    //   axios.post(`https://todolist-data-2f4e2-default-rtdb.firebaseio.com/todoList.json`,\r\n    //     {\r\n    //       id: state.DATA.length,\r\n    //       title: action.value.title,\r\n    //       status: 'new',\r\n    //       creator: action.value.creator,\r\n    //       description: action.value.description\r\n    //     }\r\n    //   )\r\n    //     .then(res => {\r\n    //       console.log(res);\r\n    //     })\r\n    //   return {\r\n    //     ...state,\r\n    //     target: ''\r\n    //   }\r\n\r\n    // case CLICK_TASK:\r\n    //   return {\r\n    //     ...state,\r\n    //     target: 'edit',\r\n    //     idTask: action.value.id,\r\n    //     title: action.value.title,\r\n    //     creator: action.value.creator,\r\n    //     description: action.value.description,\r\n    //     status: action.value.status\r\n    //   }\r\n\r\n    // case SUBMIT_EDIT_TASK:\r\n    //   const newData = [...state.DATA]\r\n    //   const index = newData.findIndex(x => x.id === state.idTask);\r\n    //   newData[index].title = action.value.title;\r\n    //   newData[index].creator = action.value.creator;\r\n    //   newData[index].description = action.value.desc;\r\n    //   newData[index].status = action.value.status;\r\n    //   return {\r\n    //     ...state,\r\n    //     DATA: newData,\r\n    //     target: '',\r\n    //     resetForm: false,\r\n    //   }\r\n\r\n    // case CLICK_NEW_SIDEBAR:\r\n    //   return {\r\n    //     ...state,\r\n    //     arrNew: [...state.DATA].filter(x => x.status === 'new'),\r\n    //   }\r\n\r\n    // case CLICK_DOING_SIDEBAR:\r\n    //   return {\r\n    //     ...state,\r\n    //     arrDoing: [...state.DATA].filter(x => x.status === 'doing'),\r\n    //   }\r\n\r\n    // case CLICK_DONE_SIDEBAR:\r\n    //   return {\r\n    //     ...state,\r\n    //     arrDone: [...state.DATA].filter(x => x.status === 'done'),\r\n    //   }\r\n\r\n    // case CLICK_ALLTASK_SIDEBAR:\r\n    //   return {\r\n    //     ...state,\r\n    //   }\r\n\r\n    // case RESET_FORM_EDIT:\r\n    //   return {\r\n    //     ...state,\r\n    //     resetForm: true,\r\n    //     target: 'edit',\r\n    //     title: '',\r\n    //     creator: '',\r\n    //     description: '',\r\n    //     status: ''\r\n    //   }\r\n\r\n    // case DELETE_FORM_EDIT:\r\n    //   const newDataDelete = [...state.DATA]\r\n    //   const indexTask = newDataDelete.findIndex(x => x.id === state.idTask)\r\n    //   newDataDelete.splice(indexTask, 1)\r\n    //   return {\r\n    //     ...state,\r\n    //     DATA: newDataDelete,\r\n    //     target: ''\r\n    //   }\r\n\r\n    // case SUBMIT_FORM_SEARCH:\r\n    //   const newDataFormSearch = [...state.DATA]\r\n    //   const itemTaskSearch = newDataFormSearch.filter(val => {\r\n    //     if (val.title.toLowerCase().includes(action.value.value.toLowerCase()) || val.creator.toLowerCase().includes(action.value.value.toLowerCase())) {\r\n    //       console.log(val);\r\n    //       return val\r\n    //     }\r\n    //   })\r\n    //   return {\r\n    //     ...state,\r\n    //     arrSearchForm: itemTaskSearch,\r\n    //     isSearch: true\r\n    //   }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default createReducer","import * as TypeActions from \"../constants/TypeActions\";\r\n\r\nconst initState = {\r\n    data: []\r\n}\r\n\r\nconst getDataReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case TypeActions.GET_DATA:\r\n            localStorage.setItem('listTodo', JSON.stringify(action.data))\r\n            return {\r\n                ...state,\r\n                data: action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default getDataReducer;","import * as TypeActions from '../constants/TypeActions';\r\n\r\nconst taskReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case TypeActions.SUBMIT_FORM_EDIT:\r\n            const getTodoLocal = JSON.parse(localStorage.getItem('listTodo'))\r\n            const newTodoLocal = [...getTodoLocal]\r\n\r\n            newTodoLocal[action.id].title = action.value.title\r\n            newTodoLocal[action.id].creator = action.value.creator\r\n            newTodoLocal[action.id].status = action.value.status\r\n            newTodoLocal[action.id].description = action.value.description\r\n\r\n            localStorage.setItem('listTodo', JSON.stringify(newTodoLocal))\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default taskReducer\r\n","import * as TypeActions from '../constants/TypeActions';\r\n\r\nconst initState = {\r\n    dataSearch: []\r\n}\r\n\r\nconst searchReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case TypeActions.SUBMIT_FORM_SEARCH:\r\n            const getTodoLocal = JSON.parse(localStorage.getItem('listTodo'))\r\n            const listFilterTodo = getTodoLocal.filter(todo => {\r\n                if (todo.title.toLowerCase().includes(action.value) ||\r\n                    todo.description.toLowerCase().includes(action.value) ||\r\n                    todo.status.toLowerCase().includes(action.value)) {\r\n                    return todo\r\n                }\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                dataSearch: listFilterTodo\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default searchReducer;","import { combineReducers } from 'redux';\r\n\r\nimport createTaskReducer from './createReducer';\r\nimport getDataReducer from './getDataReducer';\r\nimport taskReducer from './taskReducer';\r\nimport searchReducer from './searchReducer'\r\n\r\nconst rootReducers = combineReducers({\r\n    getDataReducer,\r\n    createTaskReducer,\r\n    taskReducer,\r\n    searchReducer\r\n});\r\n\r\nexport default rootReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(),\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  , document.getElementById('root'));\r\n"],"sourceRoot":""}