{"version":3,"sources":["components/main/sidebar/Sidebar.jsx","components/header/nav/Nav.jsx","components/header/createNewTask/CreateTask.jsx","components/main/content/EditContent.jsx","components/main/content/ContentItem.jsx","components/footer/Pagination.jsx","actions/createTask.js","components/main/content/newTaskList/NewTaskList.jsx","components/main/content/doingTaskList/DoingTaskList.jsx","components/main/content/doneTaskList/DoneTaskList.jsx","components/main/content/allTaskList/AllTaskList.jsx","App.js","reducers/createReducer.js","reducers/index.js","index.js"],"names":["connect","dispatch","clickNewTaskSidebar","type","clickDoingTaskSidebar","clickDoneTaskSidebar","clickAllTaskSidebar","to","onClick","clickCreate","onSubmitFormSearch","valueSearch","value","useState","searchTask","setSearchTask","className","id","onSubmit","e","preventDefault","onChange","target","state","create","onSubmitForm","time","Date","getHours","getMinutes","getSeconds","date","getDay","getMonth","getFullYear","createAt","title","creator","desc","setValue","placeholder","disabled","resetForm","description","status","onSubmitFormEdit","valueEdit","onResetForm","onDeleteForm","setValueEdit","for","name","ContentItem","clicked","Pagination","currentPage","onPageChange","todosPerPage","totalTodos","totalSearchTodos","totalPages","Math","ceil","CLICK_CREATE","CLICK_TASK","CLICK_NEW_SIDEBAR","CLICK_DOING_SIDEBAR","CLICK_DONE_SIDEBAR","CLICK_ALLTASK_SIDEBAR","SUBMIT_CREATE_TASK","SUBMIT_EDIT_TASK","RESET_FORM_EDIT","DELETE_FORM_EDIT","SUBMIT_FORM_SEARCH","PUSH_DATA","dataNewTaskList","arrNew","onClickedTask","item","setCurrentPage","length","indexOfLastTodos","indexOfFirstTodos","currentTodos","slice","map","newPage","dataDoingTaskList","arrDoing","dataDoneTaskList","arrDone","dataAllTaskList","DATA","arrSearchForm","isSearch","indexOfLastTodosSearch","indexOfFirstTodosSearch","currentTodosSearch","todos","onPushData","data","useEffect","axios","get","then","res","path","exact","component","AllTaskList","NewTaskList","DoingTaskList","DoneTaskList","CreateTask","EditContent","initialState","idTask","searchBox","rootReducers","combineReducers","action","concat","console","log","newData","index","findIndex","x","filter","newDataDelete","indexTask","splice","newDataFormSearch","itemTaskSearch","val","toLowerCase","includes","store","createStore","reducers","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0140ca3e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Sidebar = ({ clickNewTaskSidebar, clickDoingTaskSidebar, clickDoneTaskSidebar, clickAllTaskSidebar }) => {\r\n\r\n    return (\r\n        <ul>\r\n            <Link to=\"/all\">\r\n                <li onClick={clickAllTaskSidebar}>All task</li>\r\n            </Link>\r\n            <Link to=\"/new\">\r\n                <li onClick={clickNewTaskSidebar}>New task</li>\r\n            </Link>\r\n            <Link to=\"/doing\">\r\n                <li onClick={clickDoingTaskSidebar}>Doing task</li>\r\n            </Link>\r\n            <Link to=\"/done\">\r\n                <li onClick={clickDoneTaskSidebar}>Done task</li>\r\n            </Link>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clickNewTaskSidebar: () => { dispatch({ type: 'CLICK_NEW_SIDEBAR' }) },\r\n        clickDoingTaskSidebar: () => { dispatch({ type: 'CLICK_DOING_SIDEBAR' }) },\r\n        clickDoneTaskSidebar: () => { dispatch({ type: 'CLICK_DONE_SIDEBAR' }) },\r\n        clickAllTaskSidebar: () => { dispatch({ type: 'CLICK_ALLTASK_SIDEBAR' }) }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Sidebar);","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Nav = ({ clickCreate, onSubmitFormSearch }) => {\r\n    const [searchTask, setSearchTask] = useState({\r\n        value: ''\r\n    })\r\n\r\n    const hanldeSubmitFormSearch = e => {\r\n        e.preventDefault();\r\n        onSubmitFormSearch(searchTask)\r\n    }\r\n\r\n    return (\r\n        <div className=\"header__navbar\">\r\n            <Link to=\"/create\">\r\n                <h2 onClick={clickCreate}>Create new task</h2>\r\n            </Link>\r\n            <div className=\"navbar-search\">\r\n                <form id=\"form__search\" onSubmit={hanldeSubmitFormSearch}>\r\n                    <input type=\"text\" id=\"search-box\" value={searchTask.value} onChange={e => { setSearchTask({ value: e.target.value }) }} />\r\n                    <button>Search</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clickCreate: () => { dispatch({ type: 'CLICK_CREATE' }) },\r\n        onSubmitFormSearch: (valueSearch) => { dispatch({ type: 'SUBMIT_FORM_SEARCH', value: valueSearch }) }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Nav);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CreateTask = ({ onSubmitForm, target, }) => {\r\n  const time = ` ${new Date().getHours()}-${new Date().getMinutes()}-${new Date().getSeconds()}`;\r\n  const date = `${new Date().getDay()}-${new Date().getMonth() + 1}-${new Date().getFullYear()}`\r\n  const createAt = `${time} ${date}`\r\n\r\n  const [value, setValue] = useState({\r\n    title: '',\r\n    creator: '',\r\n    desc: '',\r\n  })\r\n\r\n  const hanldeSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmitForm(value)\r\n  }\r\n\r\n  return (\r\n    target === 'create' ?\r\n      <form onSubmit={hanldeSubmit}>\r\n        <div className=\"form__item\">\r\n          <label className=\"label1\" > Title: </label >\r\n          <input className=\"input1\" type=\"text\" placeholder=\"name of title\" onChange={e => setValue({ ...value, title: e.target.value })} />\r\n        </div>\r\n\r\n        <div className=\"form__item\">\r\n          <label className=\"label2\">Creator: </label>\r\n          <input className=\"input2\" type=\"text\" placeholder=\"name of creator\" onChange={e => setValue({ ...value, creator: e.target.value })} />\r\n        </div>\r\n\r\n        <div className=\"form__item\">\r\n          <label className=\"label3\">Created at: </label>\r\n          <input className=\"input3\" type=\"text\" value={createAt} disabled />\r\n        </div>\r\n\r\n        <div className=\"form__item\">\r\n          <label className=\"label4\">Description: </label>\r\n          <input className=\"input4\" type=\"text\" placeholder=\"Description detail\" onChange={e => setValue({ ...value, desc: e.target.value })} />\r\n        </div>\r\n\r\n        <button type=\"submit\">Save</button>\r\n\r\n      </form> : null\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    target: state.create.target,\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmitForm: (value) => { dispatch({ type: 'SUBMIT_CREATE_TASK', value: value }) }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTask);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst EditContent = ({ target, onSubmitFormEdit, onResetForm, onDeleteForm, resetForm, title, status, description, creator }) => {\r\n  const time = ` ${new Date().getHours()}-${new Date().getMinutes()}-${new Date().getSeconds()}`;\r\n  const date = `${new Date().getDay()}-${new Date().getMonth() + 1}-${new Date().getFullYear()}`\r\n  const createAt = `${time} ${date}`\r\n\r\n  const [valueEdit, setValueEdit] = useState({\r\n    title: title,\r\n    creator: creator,\r\n    createAt: createAt,\r\n    status: status,\r\n    desc: description\r\n  })\r\n\r\n  const handleSubmitFormEdit = (e) => {\r\n    e.preventDefault()\r\n    onSubmitFormEdit(valueEdit)\r\n  }\r\n  const hanldeResetForm = (e) => {\r\n    e.preventDefault()\r\n    onResetForm(setValueEdit({ title: '', creator: '', status: '', desc: '' }))\r\n  }\r\n\r\n  return (\r\n    target === 'edit' ?\r\n      <form onSubmit={handleSubmitFormEdit}>\r\n        <div className=\"form__item\">\r\n          <label className=\"label1\" > Title: </label >\r\n          <input className=\"input1\"\r\n            type=\"text\" value={valueEdit.title}\r\n            placeholder=\"name of title\"\r\n            onChange={\r\n              e => setValueEdit({ ...valueEdit, title: e.target.value, })\r\n            } />\r\n        </div>\r\n\r\n        <div className=\"form__item\">\r\n          <label className=\"label2\">Creator: </label>\r\n          <input className=\"input2\" type=\"text\" value={valueEdit.creator} placeholder=\"name of creator\" onChange={e => setValueEdit({ ...valueEdit, creator: e.target.value })} />\r\n        </div>\r\n\r\n        <div className=\"form__item\">\r\n          <label className=\"label3\">Created at: </label>\r\n          <input className=\"input3\" type=\"text\" value={valueEdit.createAt} disabled />\r\n        </div>\r\n\r\n        <div className=\"form__item\">\r\n          <label className=\"label4\">Description: </label>\r\n          <input className=\"input4\" type=\"text\" value={valueEdit.desc} placeholder=\"Description detail\" onChange={e => setValueEdit({ ...valueEdit, desc: e.target.value })} />\r\n        </div>\r\n\r\n        <div className=\"form__item\">\r\n          <div className=\"form__item-radio\">\r\n            <label for=\"new\">New</label>\r\n            <input type=\"radio\" name=\"status-task\" id=\"new\" value=\"new\" onChange={e => setValueEdit({ ...valueEdit, status: e.target.value })} />\r\n          </div>\r\n\r\n          <div className=\"form__item-radio\">\r\n            <label for=\"doing\">Doing</label>\r\n            <input type=\"radio\" name=\"status-task\" id=\"doing\" value=\"doing\" onChange={e => setValueEdit({ ...valueEdit, status: e.target.value })} />\r\n          </div>\r\n\r\n          <div className=\"form__item-radio\">\r\n            <label for=\"done\">Done</label>\r\n            <input type=\"radio\" name=\"status-task\" id=\"done\" value=\"done\" onChange={e => setValueEdit({ ...valueEdit, status: e.target.value })} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form__item-button\">\r\n          <button type=\"submit\">Save</button>\r\n          <button type=\"button\" onClick={hanldeResetForm}>Reset</button>\r\n          <button type=\"button\" onClick={onDeleteForm} >Delete</button>\r\n        </div>\r\n\r\n      </form> : null\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    target: state.create.target,\r\n    resetForm: state.create.resetForm,\r\n    title: state.create.title,\r\n    creator: state.create.creator,\r\n    description: state.create.description,\r\n    status: state.create.status\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmitFormEdit: (valueEdit) => { dispatch({ type: 'SUBMIT_EDIT', value: valueEdit }) },\r\n    onResetForm: () => { dispatch({ type: 'RESET_FORM_EDIT' }) },\r\n    onDeleteForm: () => { dispatch({ type: 'DELETE_FORM_EDIT' }) }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContent);","import { connect } from \"react-redux\";\r\nimport React from 'react'\r\n\r\nconst ContentItem = ({ title, creator, status, description, clicked }) => {\r\n    return (\r\n        <div className=\"main__content-item\" onClick={clicked}>\r\n            <h6>Title: {title}</h6>\r\n            <p>Creator: {creator}</p>\r\n            <p>status: {status}</p>\r\n            <p>description:</p>\r\n            <p className=\"item__content\">{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ContentItem;","import React from 'react'\r\n\r\nconst Pagination = ({ currentPage, onPageChange, todosPerPage, totalTodos, totalSearchTodos }) => {\r\n    const totalPages = Math.ceil(totalSearchTodos && totalTodos / todosPerPage)\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <button\r\n                className=\"fas fa-chevron-left\"\r\n                onClick={() => onPageChange(currentPage - 1)}\r\n                disabled={currentPage <= 1}\r\n            ></button>\r\n            <button\r\n                className=\"fas fa-chevron-right\"\r\n                onClick={() => onPageChange(currentPage + 1)}\r\n                disabled={currentPage >= totalPages}\r\n            ></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;\r\n","export const CLICK_CREATE = 'CLICK_CREATE';\r\nexport const CLICK_TASK = 'CLICK_TASK';\r\nexport const CLICK_NEW_SIDEBAR = 'CLICK_NEW_SIDEBAR';\r\nexport const CLICK_DOING_SIDEBAR = 'CLICK_DOING_SIDEBAR';\r\nexport const CLICK_DONE_SIDEBAR = 'CLICK_DONE_SIDEBAR';\r\nexport const CLICK_ALLTASK_SIDEBAR = 'CLICK_ALLTASK_SIDEBAR';\r\nexport const SUBMIT_CREATE_TASK = 'SUBMIT_CREATE_TASK'\r\nexport const SUBMIT_EDIT_TASK = 'SUBMIT_EDIT';\r\nexport const RESET_FORM_EDIT = 'RESET_FORM_EDIT';\r\nexport const DELETE_FORM_EDIT = 'DELETE_FORM_EDIT';\r\nexport const SUBMIT_FORM_SEARCH = 'SUBMIT_FORM_SEARCH';\r\nexport const PUSH_DATA = 'PUSH_DATA'\r\n\r\n","import { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContentItem from '../ContentItem';\r\nimport Pagination from \"../../../footer/Pagination\";\r\nimport { useState } from \"react\";\r\nimport { CLICK_TASK } from '../../../../actions/createTask'\r\n\r\nconst NewTaskList = ({ dataNewTaskList, target, onClickedTask }) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [todosPerPage] = useState(12)\r\n    const [totalTodos] = useState(dataNewTaskList.length)\r\n\r\n    const handlePageChange = (newPage) => {\r\n        setCurrentPage(newPage)\r\n    }\r\n\r\n    const indexOfLastTodos = currentPage * todosPerPage;\r\n    const indexOfFirstTodos = indexOfLastTodos - todosPerPage;\r\n    const currentTodos = dataNewTaskList.slice(indexOfFirstTodos, indexOfLastTodos)\r\n\r\n    return (\r\n        <>\r\n            {target === 'new' ? currentTodos.map(item => (\r\n                <Link to=\"edit\">\r\n                    <ContentItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        creator={item.creator}\r\n                        status={item.status}\r\n                        description={item.description}\r\n                        clicked={() => onClickedTask(item)} />\r\n                </Link>\r\n\r\n            )\r\n            ) : null}\r\n            < Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={handlePageChange}\r\n                todosPerPage={todosPerPage}\r\n                totalTodos={totalTodos}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataNewTaskList: state.create.arrNew,\r\n        target: state.create.target\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onClickedTask: (item) => { dispatch({ type: CLICK_TASK, value: item }) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTaskList)","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CLICK_TASK } from \"../../../../actions/createTask\";\r\nimport Pagination from \"../../../footer/Pagination\";\r\nimport ContentItem from '../ContentItem';\r\n\r\nconst DoingTaskList = ({ dataDoingTaskList, target, onClickedTask }) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [todosPerPage] = useState(12)\r\n    const [totalTodos] = useState(dataDoingTaskList.length)\r\n\r\n    const handlePageChange = (newPage) => {\r\n        setCurrentPage(newPage)\r\n    }\r\n\r\n    const indexOfLastTodos = currentPage * todosPerPage;\r\n    const indexOfFirstTodos = indexOfLastTodos - todosPerPage;\r\n    const currentTodos = dataDoingTaskList.slice(indexOfFirstTodos, indexOfLastTodos)\r\n\r\n    return (\r\n        <>\r\n            {currentTodos.map(item => (\r\n                <Link to=\"edit\">\r\n                    <ContentItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        creator={item.creator}\r\n                        status={item.status}\r\n                        description={item.description}\r\n                        clicked={() => onClickedTask(item)} />\r\n                </Link>\r\n\r\n            )\r\n            )}\r\n            < Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={handlePageChange}\r\n                todosPerPage={todosPerPage}\r\n                totalTodos={totalTodos}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataDoingTaskList: state.create.arrDoing,\r\n        target: state.create.target\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onClickedTask: (item) => { dispatch({ type: CLICK_TASK, value: item }) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoingTaskList)","import { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContentItem from '../ContentItem';\r\nimport { CLICK_TASK } from \"../../../../actions/createTask\";\r\nimport { useState } from \"react\";\r\nimport Pagination from \"../../../footer/Pagination\";\r\n\r\nconst DoneTaskList = ({ dataDoneTaskList, target, onClickedTask }) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [todosPerPage] = useState(12)\r\n    const [totalTodos] = useState(dataDoneTaskList.length)\r\n\r\n    const handlePageChange = (newPage) => {\r\n        setCurrentPage(newPage)\r\n    }\r\n\r\n    const indexOfLastTodos = currentPage * todosPerPage;\r\n    const indexOfFirstTodos = indexOfLastTodos - todosPerPage;\r\n    const currentTodos = dataDoneTaskList.slice(indexOfFirstTodos, indexOfLastTodos)\r\n\r\n    return (\r\n        <>\r\n            {currentTodos.map(item => (\r\n                <Link to=\"edit\">\r\n                    <ContentItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        creator={item.creator}\r\n                        status={item.status}\r\n                        description={item.description}\r\n                        clicked={() => onClickedTask(item)} />\r\n                </Link>\r\n\r\n            )\r\n            )}\r\n            < Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={handlePageChange}\r\n                todosPerPage={todosPerPage}\r\n                totalTodos={totalTodos}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataDoneTaskList: state.create.arrDone,\r\n        target: state.create.target\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onClickedTask: (item) => { dispatch({ type: CLICK_TASK, value: item }) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoneTaskList)","import { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContentItem from '../ContentItem';\r\nimport Pagination from '../../../footer/Pagination';\r\nimport { useState } from \"react\";\r\n\r\nconst AllTaskList = ({ dataAllTaskList, isSearch, arrSearchForm, onClickedTask }) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [todosPerPage] = useState(12)\r\n    const [totalTodos] = useState(dataAllTaskList.length)\r\n    // const [totalTodosSearch] = useState(arrSearchForm.length)\r\n\r\n    const handlePageChange = (newPage) => {\r\n        setCurrentPage(newPage)\r\n    }\r\n\r\n    const indexOfLastTodos = currentPage * todosPerPage;\r\n    const indexOfFirstTodos = indexOfLastTodos - todosPerPage;\r\n    const currentTodos = dataAllTaskList.slice(indexOfFirstTodos, indexOfLastTodos)\r\n\r\n    const indexOfLastTodosSearch = currentPage * todosPerPage;\r\n    const indexOfFirstTodosSearch = indexOfLastTodos - todosPerPage;\r\n    const currentTodosSearch = arrSearchForm.slice(indexOfFirstTodosSearch, indexOfLastTodosSearch)\r\n\r\n    return (\r\n        <>\r\n            {(isSearch ? currentTodosSearch : currentTodos).map(item => (\r\n                <Link to=\"edit\">\r\n                    <ContentItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        creator={item.creator}\r\n                        status={item.status}\r\n                        description={item.description}\r\n                        clicked={() => onClickedTask(item)} />\r\n                </Link>\r\n\r\n            ))}\r\n            < Pagination\r\n                currentPage={currentPage}\r\n                onPageChange={handlePageChange}\r\n                todosPerPage={todosPerPage}\r\n                totalTodos={totalTodos}\r\n            // totalSearchTodos={totalTodosSearch}\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataAllTaskList: state.create.DATA,\r\n        target: state.create.target,\r\n        arrSearchForm: state.create.arrSearchForm,\r\n        isSearch: state.create.isSearch\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onClickedTask: (item) => { dispatch({ type: 'CLICK_TASK', value: item }) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllTaskList)","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.scss';\r\nimport { connect } from 'react-redux';\r\nimport axios from \"axios\";\r\n\r\nimport Sidebar from './components/main/sidebar/Sidebar';\r\nimport Nav from './components/header/nav/Nav';\r\nimport CreateTask from './components/header/createNewTask/CreateTask';\r\nimport EditContent from './components/main/content/EditContent';\r\nimport NewTaskList from './components/main/content/newTaskList/NewTaskList';\r\nimport DoingTaskList from './components/main/content/doingTaskList/DoingTaskList';\r\nimport DoneTaskList from './components/main/content/doneTaskList/DoneTaskList';\r\nimport AllTaskList from './components/main/content/allTaskList/AllTaskList';\r\n\r\nconst App = ({ onPushData }) => {\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3000/todos')\r\n      .then(res => onPushData(res))\r\n  }, [])\r\n\r\n  return (\r\n    <Router >\r\n      <div className=\"app\">\r\n        <Nav />\r\n        <div className=\"main\">\r\n          <div className=\"main__sidebar\">\r\n            <Sidebar />\r\n          </div>\r\n          <div className=\"main__content\">\r\n            <Switch>\r\n              <Route path=\"/\" exact component={AllTaskList} />\r\n              <Route path=\"/all\" exact component={AllTaskList} />\r\n              <Route path=\"/new\" exact component={NewTaskList} />\r\n              <Route path=\"/doing\" exact component={DoingTaskList} />\r\n              <Route path=\"/done\" exact component={DoneTaskList} />\r\n              <Route path=\"/create\" exact component={CreateTask} />\r\n              <Route path=\"/edit\" exact component={EditContent} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.create.DATA,\r\n    target: state.create.target\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onPushData: (data) => { dispatch({ type: 'PUSH_DATA', data: data }) }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  CLICK_CREATE,\r\n  SUBMIT_CREATE_TASK,\r\n  CLICK_TASK,\r\n  SUBMIT_EDIT_TASK,\r\n  CLICK_NEW_SIDEBAR,\r\n  CLICK_DOING_SIDEBAR,\r\n  CLICK_DONE_SIDEBAR,\r\n  RESET_FORM_EDIT,\r\n  DELETE_FORM_EDIT,\r\n  SUBMIT_FORM_SEARCH,\r\n  CLICK_ALLTASK_SIDEBAR,\r\n  PUSH_DATA,\r\n} from '../actions/createTask';\r\n\r\nconst initialState = {\r\n  DATA: [],\r\n  target: '',\r\n  resetForm: false,\r\n  idTask: '',\r\n  title: '',\r\n  creator: '',\r\n  status: '',\r\n  description: '',\r\n  isSearch: false,\r\n  searchBox: '',\r\n  arrSearchForm: [],\r\n  arrNew: [],\r\n  arrDoing: [],\r\n  arrDone: []\r\n}\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case PUSH_DATA:\r\n      return {\r\n        ...state,\r\n        DATA: action.data.data\r\n      }\r\n\r\n    case CLICK_CREATE:\r\n      return {\r\n        ...state,\r\n        target: 'create'\r\n      };\r\n\r\n    case SUBMIT_CREATE_TASK:\r\n      return {\r\n        DATA: [\r\n          ...state.DATA.concat({\r\n            id: state.DATA.length + 1,\r\n            title: action.value.title,\r\n            creator: action.value.creator,\r\n            status: 'new',\r\n            description: action.value.desc\r\n          })\r\n        ],\r\n        target: 'new'\r\n      }\r\n\r\n    case CLICK_TASK:\r\n      console.log(action.value);\r\n      return {\r\n        ...state,\r\n        target: 'edit',\r\n        idTask: action.value.id,\r\n        title: action.value.title,\r\n        creator: action.value.creator,\r\n        description: action.value.description,\r\n        status: action.value.status\r\n      }\r\n\r\n    case SUBMIT_EDIT_TASK:\r\n      const newData = [...state.DATA]\r\n      const index = newData.findIndex(x => x.id === state.idTask);\r\n      newData[index].title = action.value.title;\r\n      newData[index].creator = action.value.creator;\r\n      newData[index].description = action.value.desc;\r\n      newData[index].status = action.value.status;\r\n      return {\r\n        ...state,\r\n        DATA: newData,\r\n        target: '',\r\n        resetForm: false,\r\n      }\r\n\r\n    case CLICK_NEW_SIDEBAR:\r\n      return {\r\n        ...state,\r\n        arrNew: [...state.DATA].filter(x => x.status === 'new'),\r\n        target: 'new'\r\n      }\r\n\r\n    case CLICK_DOING_SIDEBAR:\r\n      console.log(state.idTask);\r\n\r\n      return {\r\n        ...state,\r\n        arrDoing: [...state.DATA].filter(x => x.status === 'doing'),\r\n      }\r\n\r\n    case CLICK_DONE_SIDEBAR:\r\n      return {\r\n        ...state,\r\n        arrDone: [...state.DATA].filter(x => x.status === 'done'),\r\n      }\r\n\r\n    case CLICK_ALLTASK_SIDEBAR:\r\n      console.log(state.idTask);\r\n\r\n      return {\r\n        ...state,\r\n      }\r\n\r\n    case RESET_FORM_EDIT:\r\n      return {\r\n        ...state,\r\n        resetForm: true,\r\n        target: 'edit',\r\n        title: '',\r\n        creator: '',\r\n        description: '',\r\n        status: ''\r\n      }\r\n\r\n    case DELETE_FORM_EDIT:\r\n      const newDataDelete = [...state.DATA]\r\n      const indexTask = newDataDelete.findIndex(x => x.id === state.idTask)\r\n      newDataDelete.splice(indexTask, 1)\r\n      console.log(newDataDelete);\r\n      return {\r\n        ...state,\r\n        DATA: newDataDelete,\r\n        target: ''\r\n      }\r\n\r\n    case SUBMIT_FORM_SEARCH:\r\n      const newDataFormSearch = [...state.DATA]\r\n      const itemTaskSearch = newDataFormSearch.filter(val => {\r\n        if (val.title.toLowerCase().includes(action.value.value.toLowerCase()) || val.creator.toLowerCase().includes(action.value.value.toLowerCase())) {\r\n          console.log(val);\r\n          return val\r\n        }\r\n      })\r\n      return {\r\n        ...state,\r\n        arrSearchForm: itemTaskSearch,\r\n        isSearch: true\r\n      }\r\n\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n}","import { combineReducers } from 'redux';\r\n\r\n// calling the default reducer to create a link\r\nimport createReducer from './createReducer';\r\n\r\nconst rootReducers = combineReducers({\r\n    // add reducer files references here\r\n    create: createReducer\r\n});\r\n\r\nexport default rootReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(),\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  , document.getElementById('root'));\r\n"],"sourceRoot":""}